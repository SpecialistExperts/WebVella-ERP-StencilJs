/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface WvCreateModal {}
  interface WvHelpModal {}
  interface WvLoadingPane {}
  interface WvOptionsModal {}
  interface WvPbInspector {}
  interface WvPbManager {
    'pageId': string;
    'recordId': string;
    'siteRootUrl': string;
  }
  interface WvPbNode {
    'nodeId': string;
  }
  interface WvPbNodeContainer {
    'containerId': string;
    'parentNodeId': string;
  }
  interface WvPbTree {}
  interface WvPbTreeNode {
    'level': number;
    'node': Object;
  }
  interface WvShowHelp {
    'nodeId': string;
  }
  interface WvShowOptions {
    'nodeId': string;
  }
}

declare global {


  interface HTMLWvCreateModalElement extends Components.WvCreateModal, HTMLStencilElement {}
  var HTMLWvCreateModalElement: {
    prototype: HTMLWvCreateModalElement;
    new (): HTMLWvCreateModalElement;
  };

  interface HTMLWvHelpModalElement extends Components.WvHelpModal, HTMLStencilElement {}
  var HTMLWvHelpModalElement: {
    prototype: HTMLWvHelpModalElement;
    new (): HTMLWvHelpModalElement;
  };

  interface HTMLWvLoadingPaneElement extends Components.WvLoadingPane, HTMLStencilElement {}
  var HTMLWvLoadingPaneElement: {
    prototype: HTMLWvLoadingPaneElement;
    new (): HTMLWvLoadingPaneElement;
  };

  interface HTMLWvOptionsModalElement extends Components.WvOptionsModal, HTMLStencilElement {}
  var HTMLWvOptionsModalElement: {
    prototype: HTMLWvOptionsModalElement;
    new (): HTMLWvOptionsModalElement;
  };

  interface HTMLWvPbInspectorElement extends Components.WvPbInspector, HTMLStencilElement {}
  var HTMLWvPbInspectorElement: {
    prototype: HTMLWvPbInspectorElement;
    new (): HTMLWvPbInspectorElement;
  };

  interface HTMLWvPbManagerElement extends Components.WvPbManager, HTMLStencilElement {}
  var HTMLWvPbManagerElement: {
    prototype: HTMLWvPbManagerElement;
    new (): HTMLWvPbManagerElement;
  };

  interface HTMLWvPbNodeElement extends Components.WvPbNode, HTMLStencilElement {}
  var HTMLWvPbNodeElement: {
    prototype: HTMLWvPbNodeElement;
    new (): HTMLWvPbNodeElement;
  };

  interface HTMLWvPbNodeContainerElement extends Components.WvPbNodeContainer, HTMLStencilElement {}
  var HTMLWvPbNodeContainerElement: {
    prototype: HTMLWvPbNodeContainerElement;
    new (): HTMLWvPbNodeContainerElement;
  };

  interface HTMLWvPbTreeElement extends Components.WvPbTree, HTMLStencilElement {}
  var HTMLWvPbTreeElement: {
    prototype: HTMLWvPbTreeElement;
    new (): HTMLWvPbTreeElement;
  };

  interface HTMLWvPbTreeNodeElement extends Components.WvPbTreeNode, HTMLStencilElement {}
  var HTMLWvPbTreeNodeElement: {
    prototype: HTMLWvPbTreeNodeElement;
    new (): HTMLWvPbTreeNodeElement;
  };

  interface HTMLWvShowHelpElement extends Components.WvShowHelp, HTMLStencilElement {}
  var HTMLWvShowHelpElement: {
    prototype: HTMLWvShowHelpElement;
    new (): HTMLWvShowHelpElement;
  };

  interface HTMLWvShowOptionsElement extends Components.WvShowOptions, HTMLStencilElement {}
  var HTMLWvShowOptionsElement: {
    prototype: HTMLWvShowOptionsElement;
    new (): HTMLWvShowOptionsElement;
  };
  interface HTMLElementTagNameMap {
    'wv-create-modal': HTMLWvCreateModalElement;
    'wv-help-modal': HTMLWvHelpModalElement;
    'wv-loading-pane': HTMLWvLoadingPaneElement;
    'wv-options-modal': HTMLWvOptionsModalElement;
    'wv-pb-inspector': HTMLWvPbInspectorElement;
    'wv-pb-manager': HTMLWvPbManagerElement;
    'wv-pb-node': HTMLWvPbNodeElement;
    'wv-pb-node-container': HTMLWvPbNodeContainerElement;
    'wv-pb-tree': HTMLWvPbTreeElement;
    'wv-pb-tree-node': HTMLWvPbTreeNodeElement;
    'wv-show-help': HTMLWvShowHelpElement;
    'wv-show-options': HTMLWvShowOptionsElement;
  }
}

declare namespace LocalJSX {
  interface WvCreateModal {}
  interface WvHelpModal {}
  interface WvLoadingPane {}
  interface WvOptionsModal {}
  interface WvPbInspector {}
  interface WvPbManager {
    'pageId'?: string;
    'recordId'?: string;
    'siteRootUrl'?: string;
  }
  interface WvPbNode {
    'nodeId'?: string;
  }
  interface WvPbNodeContainer {
    'containerId'?: string;
    'parentNodeId'?: string;
  }
  interface WvPbTree {}
  interface WvPbTreeNode {
    'level'?: number;
    'node'?: Object;
  }
  interface WvShowHelp {
    'nodeId'?: string;
  }
  interface WvShowOptions {
    'nodeId'?: string;
  }

  interface IntrinsicElements {
    'wv-create-modal': WvCreateModal;
    'wv-help-modal': WvHelpModal;
    'wv-loading-pane': WvLoadingPane;
    'wv-options-modal': WvOptionsModal;
    'wv-pb-inspector': WvPbInspector;
    'wv-pb-manager': WvPbManager;
    'wv-pb-node': WvPbNode;
    'wv-pb-node-container': WvPbNodeContainer;
    'wv-pb-tree': WvPbTree;
    'wv-pb-tree-node': WvPbTreeNode;
    'wv-show-help': WvShowHelp;
    'wv-show-options': WvShowOptions;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'wv-create-modal': LocalJSX.WvCreateModal & JSXBase.HTMLAttributes<HTMLWvCreateModalElement>;
      'wv-help-modal': LocalJSX.WvHelpModal & JSXBase.HTMLAttributes<HTMLWvHelpModalElement>;
      'wv-loading-pane': LocalJSX.WvLoadingPane & JSXBase.HTMLAttributes<HTMLWvLoadingPaneElement>;
      'wv-options-modal': LocalJSX.WvOptionsModal & JSXBase.HTMLAttributes<HTMLWvOptionsModalElement>;
      'wv-pb-inspector': LocalJSX.WvPbInspector & JSXBase.HTMLAttributes<HTMLWvPbInspectorElement>;
      'wv-pb-manager': LocalJSX.WvPbManager & JSXBase.HTMLAttributes<HTMLWvPbManagerElement>;
      'wv-pb-node': LocalJSX.WvPbNode & JSXBase.HTMLAttributes<HTMLWvPbNodeElement>;
      'wv-pb-node-container': LocalJSX.WvPbNodeContainer & JSXBase.HTMLAttributes<HTMLWvPbNodeContainerElement>;
      'wv-pb-tree': LocalJSX.WvPbTree & JSXBase.HTMLAttributes<HTMLWvPbTreeElement>;
      'wv-pb-tree-node': LocalJSX.WvPbTreeNode & JSXBase.HTMLAttributes<HTMLWvPbTreeNodeElement>;
      'wv-show-help': LocalJSX.WvShowHelp & JSXBase.HTMLAttributes<HTMLWvShowHelpElement>;
      'wv-show-options': LocalJSX.WvShowOptions & JSXBase.HTMLAttributes<HTMLWvShowOptionsElement>;
    }
  }
}


