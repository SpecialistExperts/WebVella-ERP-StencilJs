/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface WvSitemapAreaModal {
    'area': Object;
    'submitResponse': Object;
  }
  interface WvSitemapManager {
    'apiRoot': string;
    'appId': string;
    'initData': string;
  }
  interface WvSitemapManagerArea {
    'area': Object;
  }
  interface WvSitemapNodeModal {
    'apiRoot': string;
    'appId': string;
    'nodeAuxData': Object;
    'nodeObj': Object;
    'nodePageDict': Object;
    'submitResponse': Object;
  }
}

declare global {


  interface HTMLWvSitemapAreaModalElement extends Components.WvSitemapAreaModal, HTMLStencilElement {}
  var HTMLWvSitemapAreaModalElement: {
    prototype: HTMLWvSitemapAreaModalElement;
    new (): HTMLWvSitemapAreaModalElement;
  };

  interface HTMLWvSitemapManagerElement extends Components.WvSitemapManager, HTMLStencilElement {}
  var HTMLWvSitemapManagerElement: {
    prototype: HTMLWvSitemapManagerElement;
    new (): HTMLWvSitemapManagerElement;
  };

  interface HTMLWvSitemapManagerAreaElement extends Components.WvSitemapManagerArea, HTMLStencilElement {}
  var HTMLWvSitemapManagerAreaElement: {
    prototype: HTMLWvSitemapManagerAreaElement;
    new (): HTMLWvSitemapManagerAreaElement;
  };

  interface HTMLWvSitemapNodeModalElement extends Components.WvSitemapNodeModal, HTMLStencilElement {}
  var HTMLWvSitemapNodeModalElement: {
    prototype: HTMLWvSitemapNodeModalElement;
    new (): HTMLWvSitemapNodeModalElement;
  };
  interface HTMLElementTagNameMap {
    'wv-sitemap-area-modal': HTMLWvSitemapAreaModalElement;
    'wv-sitemap-manager': HTMLWvSitemapManagerElement;
    'wv-sitemap-manager-area': HTMLWvSitemapManagerAreaElement;
    'wv-sitemap-node-modal': HTMLWvSitemapNodeModalElement;
  }
}

declare namespace LocalJSX {
  interface WvSitemapAreaModal {
    'area'?: Object;
    'onWvSitemapManagerAreaModalCloseEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerAreaSubmittedEvent'?: (event: CustomEvent<any>) => void;
    'submitResponse'?: Object;
  }
  interface WvSitemapManager {
    'apiRoot'?: string;
    'appId'?: string;
    'initData'?: string;
  }
  interface WvSitemapManagerArea {
    'area'?: Object;
    'onWvSitemapManagerAreaDeleteEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerAreaManageEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerNodeDeleteEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerNodeManageEvent'?: (event: CustomEvent<any>) => void;
  }
  interface WvSitemapNodeModal {
    'apiRoot'?: string;
    'appId'?: string;
    'nodeAuxData'?: Object;
    'nodeObj'?: Object;
    'nodePageDict'?: Object;
    'onWvSitemapManagerNodeAuxDataUpdateEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerNodeModalCloseEvent'?: (event: CustomEvent<any>) => void;
    'onWvSitemapManagerNodeSubmittedEvent'?: (event: CustomEvent<any>) => void;
    'submitResponse'?: Object;
  }

  interface IntrinsicElements {
    'wv-sitemap-area-modal': WvSitemapAreaModal;
    'wv-sitemap-manager': WvSitemapManager;
    'wv-sitemap-manager-area': WvSitemapManagerArea;
    'wv-sitemap-node-modal': WvSitemapNodeModal;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'wv-sitemap-area-modal': LocalJSX.WvSitemapAreaModal & JSXBase.HTMLAttributes<HTMLWvSitemapAreaModalElement>;
      'wv-sitemap-manager': LocalJSX.WvSitemapManager & JSXBase.HTMLAttributes<HTMLWvSitemapManagerElement>;
      'wv-sitemap-manager-area': LocalJSX.WvSitemapManagerArea & JSXBase.HTMLAttributes<HTMLWvSitemapManagerAreaElement>;
      'wv-sitemap-node-modal': LocalJSX.WvSitemapNodeModal & JSXBase.HTMLAttributes<HTMLWvSitemapNodeModalElement>;
    }
  }
}


